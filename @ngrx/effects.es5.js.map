{"version":3,"file":"effects.es5.js","sources":["../../../modules/effects/index.ts","../../../modules/effects/src/util.ts","../../../modules/effects/src/effects.module.ts","../../../modules/effects/src/bootstrap-listener.ts","../../../modules/effects/src/effects-subscription.ts","../../../modules/effects/src/actions.ts","../../../modules/effects/src/effects.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {Effect,mergeEffects,Actions,EffectsModule,EffectsSubscription,toPayload,runAfterBootstrapEffects} from './public_api';\n\nexport {afterBootstrapEffects as ɵb} from './src/bootstrap-listener';\nexport {effects as ɵa} from './src/effects-subscription';","import { Action } from '@ngrx/store';\n/**\n * @param {?} action\n * @return {?}\n */\nexport function toPayload(action: Action) {\n  return ( /** @type {?} */((<any>action))).payload;\n}\n","import { NgModule, Injector, Type, APP_BOOTSTRAP_LISTENER, OpaqueToken } from '@angular/core';\nimport { Actions } from './actions';\nimport { EffectsSubscription, effects } from './effects-subscription';\nimport { runAfterBootstrapEffects, afterBootstrapEffects } from './bootstrap-listener';\nexport class EffectsModule {\n/**\n * @param {?} type\n * @return {?}\n */\nstatic run(type: Type<any>) {\n    return {\n      ngModule: EffectsModule,\n      providers: [\n        EffectsSubscription,\n        type,\n        { provide: effects, useExisting: type, multi: true }\n      ]\n    };\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nstatic runAfterBootstrap(type: Type<any>) {\n    return {\n      ngModule: EffectsModule,\n      providers: [\n        type,\n        { provide: afterBootstrapEffects, useExisting: type, multi: true }\n      ]\n    };\n  }\n/**\n * @param {?} effectsSubscription\n */\nconstructor(private effectsSubscription: EffectsSubscription) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    Actions,\n    EffectsSubscription,\n    {\n      provide: APP_BOOTSTRAP_LISTENER,\n      multi: true,\n      deps: [ Injector, EffectsSubscription ],\n      useFactory: runAfterBootstrapEffects\n    }\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: EffectsSubscription, },\n];\n}\n\nfunction EffectsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nEffectsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEffectsModule.ctorParameters;\n/** @type {?} */\nEffectsModule.prototype.effectsSubscription;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injector, OpaqueToken } from '@angular/core';\nimport { EffectsSubscription } from './effects-subscription';\n\n\nexport const /** @type {?} */ afterBootstrapEffects = new OpaqueToken('ngrx:effects: Bootstrap Effects');\n/**\n * @param {?} injector\n * @param {?} subscription\n * @return {?}\n */\nexport function runAfterBootstrapEffects(injector: Injector, subscription: EffectsSubscription) {\n  return () => {\n    const /** @type {?} */ effectInstances = injector.get(afterBootstrapEffects, false);\n\n    if (effectInstances) {\n      subscription.addEffects(effectInstances);\n    }\n  };\n}\n","import { OpaqueToken, Inject, SkipSelf, Optional, Injectable, OnDestroy } from '@angular/core';\nimport { Action, Store } from '@ngrx/store';\nimport { Observer } from 'rxjs/Observer';\nimport { Subscription } from 'rxjs/Subscription';\nimport { merge } from 'rxjs/observable/merge';\nimport { mergeEffects } from './effects';\n\n\nexport const /** @type {?} */ effects = new OpaqueToken('ngrx/effects: Effects');\nexport class EffectsSubscription extends Subscription implements OnDestroy {\n/**\n * @param {?} store\n * @param {?=} parent\n * @param {?=} effectInstances\n */\nconstructor(\nprivate store: Observer<Action>,\npublic parent?: EffectsSubscription,\n      effectInstances?: any[]\n  ) {\n    super();\n\n    if (parent) {\n      parent.add(this);\n    }\n\n    if (typeof effectInstances !== 'undefined' && effectInstances) {\n      this.addEffects(effectInstances);\n    }\n  }\n/**\n * @param {?} effectInstances\n * @return {?}\n */\naddEffects(effectInstances: any[]) {\n    const /** @type {?} */ sources = effectInstances.map(mergeEffects);\n    const /** @type {?} */ merged = merge(...sources);\n\n    this.add(merged.subscribe(this.store));\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (!this.closed) {\n      this.unsubscribe();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [Store, ] }, ]},\n{type: EffectsSubscription, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Inject, args: [effects, ] }, ]},\n];\n}\n\nfunction EffectsSubscription_tsickle_Closure_declarations() {\n/** @type {?} */\nEffectsSubscription.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEffectsSubscription.ctorParameters;\n/** @type {?} */\nEffectsSubscription.prototype.store;\n/** @type {?} */\nEffectsSubscription.prototype.parent;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Action, ScannedActionsSubject } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\nimport { Operator } from 'rxjs/Operator';\nimport { filter } from 'rxjs/operator/filter';\nexport class Actions extends Observable<Action> {\n/**\n * @param {?} actionsSubject\n */\nconstructor( actionsSubject: Observable<Action>) {\n    super();\n    this.source = actionsSubject;\n  }\n/**\n * @param {?} operator\n * @return {?}\n */\nlift(operator: Operator<any, Action>): Observable<Action> {\n    const /** @type {?} */ observable = new Actions(this);\n    observable.operator = operator;\n    return observable;\n  }\n/**\n * @param {...?} keys\n * @return {?}\n */\nofType(...keys: string[]): Actions {\n    return filter.call(this, ({ type }: {type: string}) => {\n      const /** @type {?} */ len = keys.length;\n      if (len === 1) {\n        return type === keys[0];\n      } else {\n        for (let /** @type {?} */ i = 0; i < len; i++) {\n          if (keys[i] === type) {\n            return true;\n          }\n        }\n      }\n      return false;\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Observable, decorators: [{ type: Inject, args: [ScannedActionsSubject, ] }, ]},\n];\n}\n\nfunction Actions_tsickle_Closure_declarations() {\n/** @type {?} */\nActions.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nActions.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { merge } from 'rxjs/observable/merge';\nimport { ignoreElements } from 'rxjs/operator/ignoreElements';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\n\nconst /** @type {?} */ METADATA_KEY = '@ngrx/effects';\n\nexport interface EffectMetadata {\n  propertyName: string;\n  dispatch: boolean;\n}\n/**\n * @param {?=} __0\n * @return {?}\n */\nexport function Effect({ dispatch } = { dispatch: true }): PropertyDecorator {\n  return function(target: any, propertyName: string) {\n    if (!( /** @type {?} */((Reflect as any))).hasOwnMetadata(METADATA_KEY, target)) {\n      ( /** @type {?} */((Reflect as any))).defineMetadata(METADATA_KEY, [], target);\n    }\n\n    const /** @type {?} */ effects: EffectMetadata[] = ( /** @type {?} */((Reflect as any))).getOwnMetadata(METADATA_KEY, target);\n    const /** @type {?} */ metadata: EffectMetadata = { propertyName, dispatch };\n\n    ( /** @type {?} */((Reflect as any))).defineMetadata(METADATA_KEY, [ ...effects, metadata ], target);\n  };\n}\n/**\n * @param {?} instance\n * @return {?}\n */\nexport function getEffectsMetadata(instance: any): EffectMetadata[] {\n  const /** @type {?} */ target = Object.getPrototypeOf(instance);\n\n  if (!( /** @type {?} */((Reflect as any))).hasOwnMetadata(METADATA_KEY, target)) {\n    return [];\n  }\n\n  return ( /** @type {?} */((Reflect as any))).getOwnMetadata(METADATA_KEY, target);\n}\n/**\n * @param {?} instance\n * @return {?}\n */\nexport function mergeEffects(instance: any): Observable<any> {\n  const /** @type {?} */ observables: Observable<any>[] = getEffectsMetadata(instance).map(\n    ({ propertyName, dispatch }): Observable<any> => {\n      const /** @type {?} */ observable = typeof instance[propertyName] === 'function' ?\n        instance[propertyName]() : instance[propertyName];\n\n      if (dispatch === false) {\n        return ignoreElements.call(observable);\n      }\n\n      return observable;\n    }\n  );\n\n  return merge(...observables);\n}\n"],"names":[],"mappings":"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"}