{"version":3,"file":"effects.umd.js","sources":["../../../modules/effects/src/util.ts","../../../modules/effects/index.ts","../../../modules/effects/src/effects.module.ts","../../../modules/effects/src/bootstrap-listener.ts","../../../modules/effects/src/effects-subscription.ts","../../../modules/effects/src/singleton-effects.service.ts","../../../modules/effects/src/actions.ts","../../../modules/effects/src/effects.ts"],"sourcesContent":["import { Action } from '@ngrx/store';\n/**\n * @param {?} action\n * @return {?}\n */\nexport function toPayload(action: Action) {\n  return ( /** @type {?} */((<any>action))).payload;\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport {Effect,mergeEffects,Actions,EffectsModule,EffectsSubscription,toPayload,runAfterBootstrapEffects} from './public_api';\n\nexport {afterBootstrapEffects as ɵb} from './src/bootstrap-listener';\nexport {effects as ɵa} from './src/effects-subscription';\nexport {SingletonEffectsService as ɵc} from './src/singleton-effects.service';","import { NgModule, Injector, Type, APP_BOOTSTRAP_LISTENER, OpaqueToken } from '@angular/core';\nimport { Actions } from './actions';\nimport { EffectsSubscription, effects } from './effects-subscription';\nimport { runAfterBootstrapEffects, afterBootstrapEffects } from './bootstrap-listener';\nimport { SingletonEffectsService } from './singleton-effects.service';\nexport class EffectsModule {\n/**\n * @return {?}\n */\nstatic forRoot() {\n    return {\n      ngModule: EffectsModule,\n      providers: [\n        SingletonEffectsService\n      ]\n    };\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nstatic run(type: Type<any>) {\n    return {\n      ngModule: EffectsModule,\n      providers: [\n        EffectsSubscription,\n        type,\n        { provide: effects, useExisting: type, multi: true }\n      ]\n    };\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nstatic runAfterBootstrap(type: Type<any>) {\n    return {\n      ngModule: EffectsModule,\n      providers: [\n        type,\n        { provide: afterBootstrapEffects, useExisting: type, multi: true }\n      ]\n    };\n  }\n/**\n * @param {?} effectsSubscription\n */\nconstructor(private effectsSubscription: EffectsSubscription) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    Actions,\n    EffectsSubscription,\n    {\n      provide: APP_BOOTSTRAP_LISTENER,\n      multi: true,\n      deps: [ Injector, EffectsSubscription ],\n      useFactory: runAfterBootstrapEffects\n    }\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: EffectsSubscription, },\n];\n}\n\nfunction EffectsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nEffectsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEffectsModule.ctorParameters;\n/** @type {?} */\nEffectsModule.prototype.effectsSubscription;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injector, OpaqueToken } from '@angular/core';\nimport { EffectsSubscription } from './effects-subscription';\n\n\nexport const /** @type {?} */ afterBootstrapEffects = new OpaqueToken('ngrx:effects: Bootstrap Effects');\n/**\n * @param {?} injector\n * @param {?} subscription\n * @return {?}\n */\nexport function runAfterBootstrapEffects(injector: Injector, subscription: EffectsSubscription) {\n  return () => {\n    const /** @type {?} */ effectInstances = injector.get(afterBootstrapEffects, false);\n\n    if (effectInstances) {\n      subscription.addEffects(effectInstances);\n    }\n  };\n}\n","import { OpaqueToken, Inject, SkipSelf, Optional, Injectable, OnDestroy } from '@angular/core';\nimport { Action, Store } from '@ngrx/store';\nimport { Observer } from 'rxjs/Observer';\nimport { Subscription } from 'rxjs/Subscription';\nimport { merge } from 'rxjs/observable/merge';\nimport { mergeEffects } from './effects';\nimport { SingletonEffectsService } from './singleton-effects.service';\n\n\nexport const /** @type {?} */ effects = new OpaqueToken('ngrx/effects: Effects');\nexport class EffectsSubscription extends Subscription implements OnDestroy {\n/**\n * @param {?} store\n * @param {?} singletonEffectsService\n * @param {?=} parent\n * @param {?=} effectInstances\n */\nconstructor(\nprivate store: Observer<Action>,\nprivate singletonEffectsService: SingletonEffectsService,\npublic parent?: EffectsSubscription,\n      effectInstances?: any[]\n  ) {\n    super();\n\n    if (parent) {\n      parent.add(this);\n    }\n\n    if (typeof effectInstances !== 'undefined' && effectInstances) {\n      this.addEffects(effectInstances);\n    }\n  }\n/**\n * @param {?} effectInstances\n * @return {?}\n */\naddEffects(effectInstances: any[]) {\n    effectInstances = this.singletonEffectsService.removeExistingAndRegisterNew(effectInstances);\n\n    const /** @type {?} */ sources = effectInstances.map(mergeEffects);\n    const /** @type {?} */ merged = merge(...sources);\n\n    this.add(merged.subscribe(this.store));\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (!this.closed) {\n      this.unsubscribe();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [Store, ] }, ]},\n{type: SingletonEffectsService, decorators: [{ type: Inject, args: [SingletonEffectsService, ] }, ]},\n{type: EffectsSubscription, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Inject, args: [effects, ] }, ]},\n];\n}\n\nfunction EffectsSubscription_tsickle_Closure_declarations() {\n/** @type {?} */\nEffectsSubscription.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEffectsSubscription.ctorParameters;\n/** @type {?} */\nEffectsSubscription.prototype.store;\n/** @type {?} */\nEffectsSubscription.prototype.singletonEffectsService;\n/** @type {?} */\nEffectsSubscription.prototype.parent;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nexport class SingletonEffectsService {\nprivate registeredEffects: string[] = [];\n/**\n * @param {?} effectInstances\n * @return {?}\n */\nremoveExistingAndRegisterNew (effectInstances: any[]): any[] {\n    return effectInstances.filter(instance => {\n      const /** @type {?} */ instanceAsString = instance.constructor.toString();\n      if (this.registeredEffects.indexOf(instanceAsString) === -1) {\n        this.registeredEffects.push(instanceAsString);\n        return true;\n      }\n      return false;\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SingletonEffectsService_tsickle_Closure_declarations() {\n/** @type {?} */\nSingletonEffectsService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSingletonEffectsService.ctorParameters;\n/** @type {?} */\nSingletonEffectsService.prototype.registeredEffects;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Action, ScannedActionsSubject } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\nimport { Operator } from 'rxjs/Operator';\nimport { filter } from 'rxjs/operator/filter';\nexport class Actions extends Observable<Action> {\n/**\n * @param {?} actionsSubject\n */\nconstructor( actionsSubject: Observable<Action>) {\n    super();\n    this.source = actionsSubject;\n  }\n/**\n * @param {?} operator\n * @return {?}\n */\nlift(operator: Operator<any, Action>): Observable<Action> {\n    const /** @type {?} */ observable = new Actions(this);\n    observable.operator = operator;\n    return observable;\n  }\n/**\n * @param {...?} keys\n * @return {?}\n */\nofType(...keys: string[]): Actions {\n    return filter.call(this, ({ type }: {type: string}) => {\n      const /** @type {?} */ len = keys.length;\n      if (len === 1) {\n        return type === keys[0];\n      } else {\n        for (let /** @type {?} */ i = 0; i < len; i++) {\n          if (keys[i] === type) {\n            return true;\n          }\n        }\n      }\n      return false;\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Observable, decorators: [{ type: Inject, args: [ScannedActionsSubject, ] }, ]},\n];\n}\n\nfunction Actions_tsickle_Closure_declarations() {\n/** @type {?} */\nActions.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nActions.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { merge } from 'rxjs/observable/merge';\nimport { ignoreElements } from 'rxjs/operator/ignoreElements';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\n\nconst /** @type {?} */ METADATA_KEY = '@ngrx/effects';\n\nexport interface EffectMetadata {\n  propertyName: string;\n  dispatch: boolean;\n}\n/**\n * @param {?=} __0\n * @return {?}\n */\nexport function Effect({ dispatch } = { dispatch: true }): PropertyDecorator {\n  return function(target: any, propertyName: string) {\n    if (!( /** @type {?} */((Reflect as any))).hasOwnMetadata(METADATA_KEY, target)) {\n      ( /** @type {?} */((Reflect as any))).defineMetadata(METADATA_KEY, [], target);\n    }\n\n    const /** @type {?} */ effects: EffectMetadata[] = ( /** @type {?} */((Reflect as any))).getOwnMetadata(METADATA_KEY, target);\n    const /** @type {?} */ metadata: EffectMetadata = { propertyName, dispatch };\n\n    ( /** @type {?} */((Reflect as any))).defineMetadata(METADATA_KEY, [ ...effects, metadata ], target);\n  };\n}\n/**\n * @param {?} instance\n * @return {?}\n */\nexport function getEffectsMetadata(instance: any): EffectMetadata[] {\n  const /** @type {?} */ target = Object.getPrototypeOf(instance);\n\n  if (!( /** @type {?} */((Reflect as any))).hasOwnMetadata(METADATA_KEY, target)) {\n    return [];\n  }\n\n  return ( /** @type {?} */((Reflect as any))).getOwnMetadata(METADATA_KEY, target);\n}\n/**\n * @param {?} instance\n * @return {?}\n */\nexport function mergeEffects(instance: any): Observable<any> {\n  const /** @type {?} */ observables: Observable<any>[] = getEffectsMetadata(instance).map(\n    ({ propertyName, dispatch }): Observable<any> => {\n      const /** @type {?} */ observable = typeof instance[propertyName] === 'function' ?\n        instance[propertyName]() : instance[propertyName];\n\n      if (dispatch === false) {\n        return ignoreElements.call(observable);\n      }\n\n      return observable;\n    }\n  );\n\n  return merge(...observables);\n}\n"],"names":["Injector","APP_BOOTSTRAP_LISTENER","NgModule","OpaqueToken","Optional","Inject","SkipSelf","Store","Injectable","Subscription","merge","Observable","ScannedActionsSubject","filter","ignoreElements"],"mappings":"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"}