!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?factory(exports,require("@ngrx/store"),require("rxjs/observable/merge"),require("rxjs/operator/ignoreElements"),require("rxjs/operator/materialize"),require("rxjs/operator/map"),require("@angular/core"),require("rxjs/Observable"),require("rxjs/operator/filter"),require("rxjs/operator/groupBy"),require("rxjs/operator/mergeMap"),require("rxjs/operator/exhaustMap"),require("rxjs/operator/dematerialize"),require("rxjs/Subject")):"function"==typeof define&&define.amd?define(["exports","@ngrx/store","rxjs/observable/merge","rxjs/operator/ignoreElements","rxjs/operator/materialize","rxjs/operator/map","@angular/core","rxjs/Observable","rxjs/operator/filter","rxjs/operator/groupBy","rxjs/operator/mergeMap","rxjs/operator/exhaustMap","rxjs/operator/dematerialize","rxjs/Subject"],factory):factory((global.ngrx=global.ngrx||{},global.ngrx.effects=global.ngrx.effects||{}),global.ngrx.store,global.Rx.Observable,global.Rx.Observable.prototype,global.rxjs_operator_materialize,global.rxjs_operator_map,global.ng.core,global.Rx,global.Rx.Observable.prototype,global.rxjs_operator_groupBy,global.rxjs_operator_mergeMap,global.rxjs_operator_exhaustMap,global.rxjs_operator_dematerialize,global.rxjs_Subject)}(this,function(exports,_ngrx_store,rxjs_observable_merge,rxjs_operator_ignoreElements,rxjs_operator_materialize,rxjs_operator_map,_angular_core,rxjs_Observable,rxjs_operator_filter,rxjs_operator_groupBy,rxjs_operator_mergeMap,rxjs_operator_exhaustMap,rxjs_operator_dematerialize,rxjs_Subject){"use strict";function getEffectMetadataEntries(sourceProto){return r.hasOwnMetadata(METADATA_KEY,sourceProto)?r.getOwnMetadata(METADATA_KEY,sourceProto):[]}function setEffectMetadataEntries(sourceProto,entries){r.defineMetadata(METADATA_KEY,entries,sourceProto)}function Effect(_a){var dispatch=(void 0===_a?{dispatch:!0}:_a).dispatch;return function(target,propertyName){var effects=getEffectMetadataEntries(target),metadata={propertyName:propertyName,dispatch:dispatch};setEffectMetadataEntries(target,effects.concat([metadata]))}}function getSourceForInstance(instance){return Object.getPrototypeOf(instance)}function isOnRunEffects(sourceInstance){var source=getSourceForInstance(sourceInstance);return onRunEffectsKey in source&&"function"==typeof source[onRunEffectsKey]}function mergeEffects(sourceInstance){var sourceName=getSourceForInstance(sourceInstance).constructor.name,observables=getSourceMetadata(sourceInstance).map(function(_a){var propertyName=_a.propertyName,dispatch=_a.dispatch,observable="function"==typeof sourceInstance[propertyName]?sourceInstance[propertyName]():sourceInstance[propertyName];if(!1===dispatch)return rxjs_operator_ignoreElements.ignoreElements.call(observable);var materialized$=rxjs_operator_materialize.materialize.call(observable);return rxjs_operator_map.map.call(materialized$,function(notification){return{effect:sourceInstance[propertyName],notification:notification,propertyName:propertyName,sourceName:sourceName,sourceInstance:sourceInstance}})});return rxjs_observable_merge.merge.apply(void 0,observables)}function resolveEffectSource(sourceInstance){var mergedEffects$=mergeEffects(sourceInstance);return isOnRunEffects(sourceInstance)?sourceInstance.ngrxOnRunEffects(mergedEffects$):mergedEffects$}function createRunEffects(effectSources,runner,rootEffects){return function(){runner.start(),rootEffects.forEach(function(effectSourceInstance){return effectSources.addEffects(effectSourceInstance)})}}function createSourceInstances(){for(var instances=[],_i=0;_i<arguments.length;_i++)instances[_i]=arguments[_i];return instances}function toPayload(action){return action.payload}var __extends=function(){var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}(),METADATA_KEY="@ngrx/effects",r=Reflect,getSourceMetadata=_ngrx_store.compose(getEffectMetadataEntries,getSourceForInstance),onRunEffectsKey="ngrxOnRunEffects",Actions=function(_super){function Actions(source){var _this=_super.call(this)||this;return source&&(_this.source=source),_this}return __extends(Actions,_super),Actions.prototype.lift=function(operator){var observable=new Actions;return observable.source=this,observable.operator=operator,observable},Actions.prototype.ofType=function(){for(var allowedTypes=[],_i=0;_i<arguments.length;_i++)allowedTypes[_i]=arguments[_i];return rxjs_operator_filter.filter.call(this,function(action){return allowedTypes.some(function(type){return type===action.type})})},Actions}(rxjs_Observable.Observable);Actions.decorators=[{type:_angular_core.Injectable}],Actions.ctorParameters=function(){return[{type:rxjs_Observable.Observable,decorators:[{type:_angular_core.Inject,args:[_ngrx_store.ScannedActionsSubject]}]}]};var ROOT_EFFECTS=(new _angular_core.InjectionToken("ngrx/effects: Immediate Effects"),new _angular_core.InjectionToken("ngrx/effects: Bootstrap Effects"),new _angular_core.InjectionToken("ngrx/effects: Root Effects")),FEATURE_EFFECTS=new _angular_core.InjectionToken("ngrx/effects: Feature Effects"),CONSOLE=new _angular_core.InjectionToken("Browser Console"),ErrorReporter=function(){function ErrorReporter(console){this.console=console}return ErrorReporter.prototype.report=function(reason,details){this.console.group(reason);for(var key in details)this.console.error(key+":",details[key]);this.console.groupEnd()},ErrorReporter}();ErrorReporter.decorators=[{type:_angular_core.Injectable}],ErrorReporter.ctorParameters=function(){return[{type:void 0,decorators:[{type:_angular_core.Inject,args:[CONSOLE]}]}]};var EffectSources=function(_super){function EffectSources(errorReporter){var _this=_super.call(this)||this;return _this.errorReporter=errorReporter,_this}return __extends(EffectSources,_super),EffectSources.prototype.addEffects=function(effectSourceInstance){this.next(effectSourceInstance)},EffectSources.prototype.toActions=function(){var _this=this;return rxjs_operator_mergeMap.mergeMap.call(rxjs_operator_groupBy.groupBy.call(this,getSourceForInstance),function(source$){return rxjs_operator_dematerialize.dematerialize.call(rxjs_operator_map.map.call(rxjs_operator_exhaustMap.exhaustMap.call(source$,resolveEffectSource),function(output){switch(output.notification.kind){case"N":var action=output.notification.value;if(!action||!action.type||"string"!=typeof action.type){var errorReason='Effect "'+output.sourceName+"."+output.propertyName+'" dispatched an invalid action';_this.errorReporter.report(errorReason,{Source:output.sourceInstance,Effect:output.effect,Dispatched:action,Notification:output.notification})}break;case"E":var errorReason='Effect "'+output.sourceName+"."+output.propertyName+'" threw an error';_this.errorReporter.report(errorReason,{Source:output.sourceInstance,Effect:output.effect,Error:output.notification.error,Notification:output.notification})}return output.notification}))})},EffectSources}(rxjs_Subject.Subject);EffectSources.decorators=[{type:_angular_core.Injectable}],EffectSources.ctorParameters=function(){return[{type:ErrorReporter}]};var EffectsFeatureModule=function(){function EffectsFeatureModule(effectSources,effectSourceGroups){this.effectSources=effectSources,effectSourceGroups.forEach(function(group){return group.forEach(function(effectSourceInstance){return effectSources.addEffects(effectSourceInstance)})})}return EffectsFeatureModule}();EffectsFeatureModule.decorators=[{type:_angular_core.NgModule,args:[{}]}],EffectsFeatureModule.ctorParameters=function(){return[{type:EffectSources},{type:Array,decorators:[{type:_angular_core.Inject,args:[FEATURE_EFFECTS]}]}]};var EffectsRunner=function(){function EffectsRunner(effectSources,store){this.effectSources=effectSources,this.store=store,this.effectsSubscription=null}return EffectsRunner.prototype.start=function(){this.effectsSubscription||(this.effectsSubscription=this.effectSources.toActions().subscribe(this.store))},EffectsRunner.prototype.ngOnDestroy=function(){this.effectsSubscription&&(this.effectsSubscription.unsubscribe(),this.effectsSubscription=null)},EffectsRunner}();EffectsRunner.decorators=[{type:_angular_core.Injectable}],EffectsRunner.ctorParameters=function(){return[{type:EffectSources},{type:_ngrx_store.Store}]};var RUN_EFFECTS={provide:_angular_core.APP_INITIALIZER,multi:!0,deps:[EffectSources,EffectsRunner,ROOT_EFFECTS],useFactory:createRunEffects},EffectsModule=function(){function EffectsModule(){}return EffectsModule.forFeature=function(featureEffects){return{ngModule:EffectsFeatureModule,providers:[featureEffects,{provide:FEATURE_EFFECTS,multi:!0,deps:featureEffects,useFactory:createSourceInstances}]}},EffectsModule.forRoot=function(rootEffects){return{ngModule:EffectsModule,providers:[EffectsRunner,EffectSources,ErrorReporter,Actions,RUN_EFFECTS,rootEffects,{provide:ROOT_EFFECTS,deps:rootEffects,useFactory:createSourceInstances},{provide:CONSOLE,useValue:console}]}},EffectsModule}();EffectsModule.decorators=[{type:_angular_core.NgModule,args:[{}]}],EffectsModule.ctorParameters=function(){return[]},exports.Effect=Effect,exports.mergeEffects=mergeEffects,exports.Actions=Actions,exports.EffectsModule=EffectsModule,exports.EffectSources=EffectSources,exports.toPayload=toPayload,exports.ɵb=EffectsFeatureModule,exports.ɵa=createSourceInstances,exports.ɵg=EffectsRunner,exports.ɵf=ErrorReporter,exports.ɵi=RUN_EFFECTS,exports.ɵh=createRunEffects,exports.ɵe=CONSOLE,exports.ɵd=FEATURE_EFFECTS,exports.ɵc=ROOT_EFFECTS,Object.defineProperty(exports,"__esModule",{value:!0})});
//# sourceMappingURL=./dist/effects/bundles/effects.umd.min.js.map